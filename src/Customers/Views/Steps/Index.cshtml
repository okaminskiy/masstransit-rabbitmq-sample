@model dynamic

@{}
<script type="text/javascript" src="~/Scripts/Steps/knockout-2.2.1.js"></script>
<script type="text/javascript" src="~/Scripts/jquery-1.9.0.min.js"></script>
<script type="text/javascript" src="~/Scripts/Steps/jquery.history.js"></script>
<!-- Bundles.Reference("Scripts/steps/");-->

<h2>Steps</h2>

Here are the participants:
<div data-bind="template: {data: historyData, name: step} "></div>

<button id="back">&lt;&lt;Back</button>
<button id="next">Next&gt;&gt;</button>

<script type="text/html" id="step1">
    <h1 id ="templateName">step1</h1>
    <input type="text" id="data" name="step1"/>
</script>

<script type="text/html" id="step2">
    <h1 id ="templateName">step2</h1>
    <input type="text" id="data" name="step2"/>
</script>

<script type="text/html" id="step3">
    <h1 id ="templateName">step3</h1>
    <input type="text" id="data" value="step3"/>
</script>


<script type="text/javascript">
    var baseUrl = window.location.origin + window.location.pathname;
    var history = window.History;
    history.init();

    var stepView = new function() {
        //initialize 
        this.step = 'step1';
        this.historyData = 'bob';
        this.nextStep = function () {
            this.updateCurrentStepId();
            this.stepId++;
            this.step = 'step' + this.stepId;
            history.pushState("", "", baseUrl + '?step=' + this.stepId);
        };

        this.updateCurrentStepId = function () {
            var state = history.getState();
            var match = state.url.match(/step=(\d)/);
            this.stepId = match != null ? parseInt(match[1], 10) : null;
        };

        this.updateTemplate = function() {
            this.updateCurrentStepId();
            this.step = 'step' + this.stepId;
        };

        this.updateCurrentStepId();
        if (this.stepId == null) {
            window.location.href = baseUrl + '?step=1';
        }
    };
        
    history.Adapter.bind(window, 'statechange', function() {
        stepView.updateTemplate();
        ko.applyBindings(stepView);
    });
    
    ko.applyBindings(stepView);
    $('#next').click(function () {
        if (stepView.stepId < 3) {
            stepView.nextStep();
        }
    });

</script>
 
